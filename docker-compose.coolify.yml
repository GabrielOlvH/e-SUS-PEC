services:
  pec:
    container_name: pec
    platform: linux/amd64
    restart: unless-stopped
    volumes:
      - esus_opt:/opt/e-SUS
      - esus_backups:/backups
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    build:
      context: ./aws
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASS=${SERVICE_PASSWORD_POSTGRES:-${POSTGRES_PASS:-pass}}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-esus}
      - TRAINING=${TRAINING:-false}
      - TZ=${TZ:-America/Sao_Paulo}
      - APP_PORT=8080
      - SERVICE_FQDN_PEC=${SERVICE_FQDN_PEC}
    privileged: true
    stdin_open: true
    tty: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 300s

  db:
    container_name: db
    image: postgres:9.6-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES:-${POSTGRES_PASS:-pass}}
      - POSTGRES_DB=${POSTGRES_DB:-esus}
    volumes:
      - esus_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  esus_opt:
    driver: local
  esus_backups:
    driver: local
  esus_db:
    driver: local